var assert = require('assert');
var main = require('../js/main');
describe('Main', function() {
  describe('validateVest', function() {
    it('simple valid input', function() {
      assert.deepEqual(main.validateVest('5/15/40/40'), [5,15,40,40]);
    });
    it('with percentage signs', function() {
      assert.deepEqual(main.validateVest('5%/15%/40%/40%'), [5,15,40,40]);
    });
  });
  describe('getStockComp', function() {
    it('simple example', function() {
      assert.deepEqual(main.getStockComp(100,10,[10,20,30,40]), [100,200,300,400]);
    });
  });
  describe('getBonusComp', function() {
    it('simple example', function() {
      assert.deepEqual(main.getBonusComp('10000/12000'), [10000,12000]);
    });
    it('with commas', function() {
      assert.deepEqual(main.getBonusComp('10,000/12,000'), [10000,12000]);
    });
    it('with dollars', function() {
      assert.deepEqual(main.getBonusComp('10,000/12,000'), [10000,12000]);
    });
  });
  describe('getTotalComp', function() {
    it('simple example', function() {
      assert.deepEqual(main.getTotalComp(60000,[],[]), [60000,60000,60000,60000]);
    });
    it('with bonus', function() {
      assert.deepEqual(main.getTotalComp(60000,[],[10000,5000]), [70000,65000,60000,60000]);
    });
    it('with stock', function() {
      assert.deepEqual(main.getTotalComp(60000,[10000,5000],[]), [70000,65000,60000,60000]);
    });
    it('with stock and bonus', function() {
      assert.deepEqual(main.getTotalComp(60000,[5000,10000,20000,20000],[10000,5000]), [75000,75000,80000,80000]);
    });
    it('with long vest schedule', function() {
      assert.deepEqual(main.getTotalComp(60000,[1000,5000,10000,20000,30000,40000],[]), [61000,65000,70000,80000,90000,100000]);
    });
  });
});
